name: C/C++ CI

on:
  push:
    branches: [ master ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10 

jobs:

  linux_build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: create object folder
      run: mkdir objs
    - name: create build folder
      run: mkdir build
    - name: make
      run: make cmd
    - name: cleanup
      run: rm -rf objs
    - name: upload code generator
      uses: actions/upload-artifact@v2
      with:
        name: codegenerator_linux
        path: build/CodeGenerator
    
      
  windows_build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: create object folder
      run: mkdir objs
    - name: create build folder
      run: mkdir build
    - name: make
      run: make cmdWin
    - name: cleanup
      run: rd -r objs
    - name: upload code generator
      uses: actions/upload-artifact@v2
      with:
        name: CodeGenerator.exe
        path: build/CodeGenerator.exe
        
  osx_build:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v2
    - name: create object folder
      run: mkdir objs
    - name: create build folder
      run: mkdir build
    - name: make
      run: make cmdOSX
    - name: cleanup
      run: rm -rf objs
    - name: upload code generator
      uses: actions/upload-artifact@v2
      with:
        name: CodeGenerator_OSX
        path: build/CodeGenerator_OSX


  release_builds: 
    needs: [linux_build, windows_build, osx_build]
    runs-on: ubuntu-latest
    
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this release
            - Initial build
          draft: false
          prerelease: true
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
      - name: Upload Linux release
        id: upload-linux-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./codegenerator_linux/codegenerator_linux
          asset_name: codegenerator_linux
          asset_content_type: application/exe
      - name: Upload Release Asset osx
        id: upload-osx-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CodeGenerator_OSX
          asset_name: codegenerator_osx
          asset_content_type: application/exe
      - name: Upload Release Asset windows
        id: upload-windows-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./CodeGenerator.exe
          asset_name: CodeGenerator_windows.exe
          asset_content_type: application/exe
